# -*- coding: utf-8 -*-
"""CAR_PricePredict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xILWljH6VRGP6GqlziJXTBB8z5vziJcn
"""

import pickle
from google.colab import files
import pandas as pd # Needed to create the input DataFrame

# 1. Upload the saved model file ('car_price_predictor_model.pkl')
print("Please upload the 'car_price_predictor_model.pkl' file:")
uploaded = files.upload()
model_file_name = list(uploaded.keys())[0]

# 2. Load the pipeline from the file
with open(model_file_name, 'rb') as file:
    loaded_model_pipeline = pickle.load(file)

print(f"Model '{model_file_name}' loaded successfully.")

import pickle
import pandas as pd

# 1. Ensure the 'car_price_predictor_model.pkl' file is in the same directory
#    as your Python script, or provide the full file path.
model_file_path = 'car_price_predictor_model.pkl'

# 2. Load the pipeline from the file
with open(model_file_path, 'rb') as file:
    loaded_model_pipeline = pickle.load(file)

print(f"Model loaded successfully from {model_file_path}")

# Create a DataFrame for a single new car or multiple cars
new_car_data = pd.DataFrame({
    'Car_Name': ['Amaze E Diesel'],
    'Year': [2018],
    'Current_Price': [9.50],
    'Driven_Distance_km': [35000],
    'Fuel_Type': ['Diesel'],
    'Selling_Type': ['Individual'],
    'Transmission_Type': ['Manual'],
    'Owners': [1]
})

# Add 'Car_Age' and 'Car_Brand' columns as required by the model pipeline
current_year = 2024  # Assuming the current year is 2024
new_car_data['Car_Age'] = current_year - new_car_data['Year']
new_car_data['Car_Brand'] = new_car_data['Car_Name'].apply(lambda x: x.split(' ')[0])


print("New Car Data:")
print(new_car_data)

# The loaded_model_pipeline object handles all the preprocessing (Car Age, Brand, Scaling, Encoding)
# and then runs the prediction.

predicted_price = loaded_model_pipeline.predict(new_car_data)

# Print the result
print("\n--- Prediction Result ---")
print(f"Predicted Selling Price: {predicted_price[0]:,.2f}")

# For multiple cars, predicted_price will be an array of prices.